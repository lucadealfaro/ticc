(*
 * House example 
 *)

open Ticc;;

parse "house2.si";;

let breaks      = mk_sym "Breaks";;
let calls	= mk_sym "Calls";;
let plumber     = mk_sym "Plumber";;
let electrician = mk_sym "Electrician";;
let rudelectr   = mk_sym "RudeElectrician";;
let floors      = mk_sym "Floors";;
let walls       = mk_sym "Walls";;
let clean       = mk_sym "Clean";;

let c = compose (compose calls plumber) electrician;;
let d = compose (compose calls plumber) rudelectr;;

print_string "\nRestriction in composition  calls || plumber || electrician :\n";;
print_input_restriction c "call_electr";;
print_string "\nRestriction in composition  calls || plumber || rude_electrician :\n";;
print_input_restriction d "call_electr";;


