// A module to test the use of timed ticc for scheduling. 


module Cpu: 
    var busy: bool

    input start* : { local: ~busy ==> busy' := true  }
    input stop*  : { local:  busy ==> busy' := false } 
endmodule

module TaskA: 
    var active: bool
    var done:   bool
    var c:      clock
    oinv: c <= 4 or ~active


    input startA : { local: ~done & ~active ==> c' := 0, active' := true }
    output stopA : { active ==> ~active' & done' }
    input periodA: { local: done ==> done' := false, active' := false }
endmodule

module ClockA: 
    var c:  clock
    oinv:   c <= 9

    output periodA: { c = 9 ==> c' = 0 }
endmodule

module TaskB: 
    var active: bool
    var done:   bool
    var c:      clock
    oinv: c <= 3 or ~active


    input startB : { local: ~done & ~active ==> c' := 0, active' := true }
    output stopB : { active ==> ~active' & done' }
    input periodB: { local: done ==> done' := false, active' := false }
endmodule

module ClockB: 
    var c:  clock
    oinv:   c <= 5

    output periodB: { c = 5 ==> c' = 0 }
endmodule

