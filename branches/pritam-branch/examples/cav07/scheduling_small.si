// A module to test the use of timed ticc for scheduling. 

module S: 
    var cpu, activeA,  doneA: bool 
    var  dA: clock

    oinv: (activeA -> dA <= 2) 
    iinv: (dA <= 4) 

    initial:  dA = 0
 
    input startA : { local: ~doneA & ~activeA & ~cpu ==> 
			    activeA' := true, cpu' := true, dA' := 0 } 
    //input startB : { local: ~doneB & ~activeB & ~cpu ==> 
 //			    activeB' := true, cpu' := true, dB' := 0 } 

    output stopA : { activeA ==> ~activeA' & ~cpu' & doneA' }
//    output stopA2 : { ~activeA ==> activeA' & ~cpu' & doneA' }

//   input periodA: { local: doneA & cA = 4 ==> 
//                       cA' := 0, doneA' := false } 
//    input periodB: { local: doneB & cB = 9 ==> 
//                       cB' := 0, doneB' := false } 
endmodule
