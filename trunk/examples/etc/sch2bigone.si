// A module to test the use of timed ticc for scheduling. 

module Scheduling: 
    var cpu: bool 
    var cA, dA: clock
    var cB, dB: clock

    var activeA, activeB: bool
    var doneA,   doneB:   bool

    oinv: activeA -> dA <= 3
    oinv: activeB -> dB <= 5

    iinv: cA <= 4
    iinv: cB <= 9
 
    input StartA : { local: ~doneA & ~activeA & ~cpu ==> 
			    activeA' := true, cpu' := true, dA' := 0 } 
    input StartB : { local: ~doneB & ~activeB & ~cpu ==> 
			    activeB' := true, cpu' := true, dB' := 0 } 

    output stopA : { activeA ==> ~activeA' & ~cpu' & doneA' } 
    output stopB : { activeB ==> ~activeB' & ~cpu' & doneB' }

    input periodA: { local: doneA & cA = 4 ==> cA' := 0, doneA' := false } 
    input periodB: { local: doneA & cB = 9 ==> cB' := 0, doneB' := false } 
endmodule
