(* 
	Comparison between two implementations of zenoness game.
*)

open Ticc;;
parse "schedule2.si" ;;
let cpu = mk_sym "Cpu";;
let a = mk_sym "TaskA";;
let clka = mk_sym "ClockA";;
let b = mk_sym "TaskB";;
let clkb = mk_sym "ClockB";;

(* forms the global module, all *)
let ab = compose a b;;
let clkab = compose clka clkb;;
let sys = compose ab clkab;;
let all = compose sys cpu;;

Printf.printf "Zeno with cpre:\n";;
flush stdout;;

let time = Sys.time ();;
let losers2 = zeno_cpre all ~verbose:true;;
let time = (Sys.time ()) -. time;;

Printf.printf "\ntime: %f \n" time;;
Printf.printf "Losing states:\n";;
flush stdout;;

Printf.printf "Zeno with gap:\n";;
flush stdout;;
let time = Sys.time ();;
let losers1 = zeno all;;
let time = (Sys.time ()) -. time;;

Printf.printf "\ntime: %f \n" time;;
Printf.printf "Losing states:\n";;
flush stdout;;

(* print_stateset losers2;;
print_stateset losers1;; *)


Printf.printf "end.\n";;
