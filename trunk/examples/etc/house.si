// Rooms: K(itchen), L(iving room), B(athroom), (bed)R(oom)
// What: plumb(ing), electr(ical), floor (painting), wall (painting), clean
// Values: 0 (ok), 1 (to do)

// Busy: someone is working on it 
var K_busy, L_busy, B_busy, R_busy: bool 

// Whether broken or not 
var K_plumb, K_electr, K_floor, K_wall, K_clean: bool 
var L_plumb, L_electr, L_floor, L_wall, L_clean: bool 
var B_plumb, B_electr, B_floor, B_wall, B_clean: bool 
var R_plumb, R_electr, R_floor, R_wall, R_clean: bool 
var plumb_active, electr_active, floor_active, wall_active, clean_active: bool 

// This is the initial condition 
stateset initial: ~K_busy & ~L_busy & ~B_busy & ~R_busy
	 & ~plumb_active & ~electr_active & ~floor_active & ~wall_active & ~clean_active

// This is the module that breaks things. 
module Breaks: 
  stateless
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean

  output break_K_plumb : { ~K_plumb ==> K_plumb' & K_floor' & K_wall' & K_clean' } 
  output break_L_plumb : { ~L_plumb ==> L_plumb' & L_floor' & L_wall' & L_clean' } 
  output break_B_plumb : { ~B_plumb ==> B_plumb' & B_floor' & B_wall' & B_clean' } 
  output break_R_plumb : { ~R_plumb ==> R_plumb' & R_floor' & R_wall' & R_clean' } 

  output break_K_electr : { ~K_electr ==> K_electr' & K_wall' & K_clean' } 
  output break_L_electr : { ~L_electr ==> L_electr' & L_wall' & L_clean' } 
  output break_B_electr : { ~B_electr ==> B_electr' & B_wall' & B_clean' } 
  output break_R_electr : { ~R_electr ==> R_electr' & R_wall' & R_clean' } 
endmodule

// This is the module that calls for repairs
module Calls: 
  stateless // If we track these, then we would have to know about repairs/breakdowns 
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean,
	 plumb_active, electr_active, floor_active, wall_active, clean_active

  output call_plumb : { ~plumb_active & (K_plumb | L_plumb | B_plumb | R_plumb) ==> plumb_active' }
  output call_electr : { ~electr_active & (K_electr | L_electr | B_electr | R_electr) ==> electr_active' }
  output call_floor : { ~floor_active & (K_floor | L_floor | B_floor | R_floor) ==> floor_active' }
  output call_wall : { ~wall_active & (K_wall | L_wall | B_wall | R_wall) ==> wall_active' }
  output call_clean : { ~clean_active & (K_clean | L_clean | B_clean | R_clean) ==> clean_active' }
endmodule  

module Plumber:
  var working: bool // whether working or not 
  var Kw, Lw, Bw, Rw: bool  // room where working 
  stateless // If we track these, then we would have to know about repairs/breakdowns 
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean

  input call_plumb : {local: ~plumb_active ==> working' := false } 
  output done_plumb : { plumb_active & ~working & ~K_plumb & ~L_plumb & ~B_plumb & ~R_plumb ==> ~plumb_active' } 

  // Does the work 
  output plumb_start_K  : { plumb_active & ~working & K_plumb & ~K_busy ==> working' & Kw' & K_busy' }
  output plumb_start_L  : { plumb_active & ~working & L_plumb & ~L_busy ==> working' & Lw' & L_busy' }
  output plumb_start_B  : { plumb_active & ~working & B_plumb & ~B_busy ==> working' & Bw' & B_busy' }
  output plumb_start_R  : { plumb_active & ~working & R_plumb & ~R_busy ==> working' & Rw' & R_busy' }
  output plumb_done_K   : { plumb_active & Kw ==> ~K_plumb' & ~Kw' & ~K_busy' & ~working' } 
  output plumb_done_L   : { plumb_active & Lw ==> ~L_plumb' & ~Lw' & ~L_busy' & ~working' } 
  output plumb_done_B   : { plumb_active & Bw ==> ~B_plumb' & ~Bw' & ~B_busy' & ~working' } 
  output plumb_done_R   : { plumb_active & Rw ==> ~R_plumb' & ~Rw' & ~R_busy' & ~working' } 

  // Checks that nobody else is working on the same room
  // input  plumb_start_K  : { ~Kw ==> true } 
  input  electr_start_K  : { local: ~Kw ==>  } 
  input  floor_start_K   : { local: ~Kw ==>  } 
  input  wall_start_K  : { local: ~Kw ==>  } 
  input  clean_start_K  : { local: ~Kw ==>  } 

  // input  plumb_start_L  : { local: ~Lw ==>  } 
  input  electr_start_L  : { local: ~Lw ==>  } 
  input  floor_start_L  : { local: ~Lw ==>  } 
  input  wall_start_L  : { local: ~Lw ==>  } 
  input  clean_start_L  : { local: ~Lw ==>  } 

  // input  plumb_start_B  : { local: ~Bw ==>  } 
  input  electr_start_B  : { local: ~Bw ==>  } 
  input  floor_start_B  : { local: ~Bw ==>  } 
  input  wall_start_B  : { local: ~Bw ==>  } 
  input  clean_start_B  : { local: ~Bw ==>  } 

  // input  plumb_start_R  : { local: ~Rw ==>  } 
  input  electr_start_R  : { local: ~Rw ==>  } 
  input  floor_start_R  : { local: ~Rw ==>  } 
  input  wall_start_R  : { local: ~Rw ==>  } 
  input  clean_start_R  : { local: ~Rw ==>  } 

  // input  plumb_done_K  : { local: ~Kw ==>  } 
  input  electr_done_K  : { local: ~Kw ==>  } 
  input  floor_done_K  : { local: ~Kw ==>  } 
  input  wall_done_K  : { local: ~Kw ==>  } 
  input  clean_done_K  : { local: ~Kw ==>  } 

  // input  plumb_done_L  : { local: ~Lw ==>  } 
  input  electr_done_L  : { local: ~Lw ==>  } 
  input  floor_done_L  : { local: ~Lw ==>  } 
  input  wall_done_L  : { local: ~Lw ==>  } 
  input  clean_done_L  : { local: ~Lw ==>  } 

  // input  plumb_done_B  : { local: ~Bw ==>  } 
  input  electr_done_B  : { local: ~Bw ==>  } 
  input  floor_done_B  : { local: ~Bw ==>  } 
  input  wall_done_B  : { local: ~Bw ==>  } 
  input  clean_done_B  : { local: ~Bw ==>  } 

  // input  plumb_done_R  : { local: ~Rw ==>  } 
  input  electr_done_R  : { local: ~Rw ==>  } 
  input  floor_done_R  : { local: ~Rw ==>  } 
  input  wall_done_R  : { local: ~Rw ==>  } 
  input  clean_done_R  : { local: ~Rw ==>  } 
endmodule

module Electrician:
  var working: bool
  var Kw, Lw, Bw, Rw: bool  // room where working 
  stateless // If we track these, then we would have to know about repairs/breakdowns 
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean

  input call_electr : {local: ~electr_active ==> working' := false } 
  output done_electr : { electr_active & ~working & ~K_electr & ~L_electr & ~B_electr & ~R_electr ==> ~electr_active' } 

  // Does the work 
  output electr_start_K : { electr_active & ~working & K_electr & ~K_busy ==> working' & Kw' & K_busy' }
  output electr_start_L : { electr_active & ~working & L_electr & ~L_busy ==> working' & Lw' & L_busy' }
  output electr_start_B : { electr_active & ~working & B_electr & ~B_busy ==> working' & Bw' & B_busy' }
  output electr_start_R : { electr_active & ~working & R_electr & ~R_busy ==> working' & Rw' & R_busy' }
  output electr_done_K  : { electr_active & Kw ==> ~K_electr' & ~Kw' & ~K_busy' & ~working' } 
  output electr_done_L  : { electr_active & Lw ==> ~L_electr' & ~Lw' & ~L_busy' & ~working' } 
  output electr_done_B  : { electr_active & Bw ==> ~B_electr' & ~Bw' & ~B_busy' & ~working' } 
  output electr_done_R  : { electr_active & Rw ==> ~R_electr' & ~Rw' & ~R_busy' & ~working' } 

  // Checks that nobody else is working on the same room
  input  plumb_start_K : { local: ~Kw ==>  } 
  // input  electr_start_K : { local: ~Kw ==>  } 
  input  floor_start_K : { local: ~Kw ==>  } 
  input  wall_start_K : { local: ~Kw ==>  } 
  input  clean_start_K : { local: ~Kw ==>  } 

  input  plumb_start_L : { local: ~Lw ==>  } 
  // input  electr_start_L : { local: ~Lw ==>  } 
  input  floor_start_L : { local: ~Lw ==>  } 
  input  wall_start_L : { local: ~Lw ==>  } 
  input  clean_start_L : { local: ~Lw ==>  } 

  input  plumb_start_B : { local: ~Bw ==>  } 
  // input  electr_start_B : { local: ~Bw ==>  } 
  input  floor_start_B : { local: ~Bw ==>  } 
  input  wall_start_B : { local: ~Bw ==>  } 
  input  clean_start_B : { local: ~Bw ==>  } 

  input  plumb_start_R : { local: ~Rw ==>  } 
  // input  electr_start_R : { local: ~Rw ==>  } 
  input  floor_start_R : { local: ~Rw ==>  } 
  input  wall_start_R : { local: ~Rw ==>  } 
  input  clean_start_R : { local: ~Rw ==>  } 

  input  plumb_done_K : { local: ~Kw ==>  } 
  // input  electr_done_K : { local: ~Kw ==>  } 
  input  floor_done_K : { local: ~Kw ==>  } 
  input  wall_done_K : { local: ~Kw ==>  } 
  input  clean_done_K : { local: ~Kw ==>  } 

  input  plumb_done_L : { local: ~Lw ==>  } 
  // input  electr_done_L : { local: ~Lw ==>  } 
  input  floor_done_L : { local: ~Lw ==>  } 
  input  wall_done_L : { local: ~Lw ==>  } 
  input  clean_done_L : { local: ~Lw ==>  } 

  input  plumb_done_B : { local: ~Bw ==>  } 
  // input  electr_done_B : { local: ~Bw ==>  } 
  input  floor_done_B : { local: ~Bw ==>  } 
  input  wall_done_B : { local: ~Bw ==>  } 
  input  clean_done_B : { local: ~Bw ==>  } 

  input  plumb_done_R : { local: ~Rw ==>  } 
  // input  electr_done_R : { local: ~Rw ==>  } 
  input  floor_done_R : { local: ~Rw ==>  } 
  input  wall_done_R : { local: ~Rw ==>  } 
  input  clean_done_R : { local: ~Rw ==>  } 
endmodule

// This module is like electrician, but does not pay attention to who
// is working in a room before starting work. 
// It should not be compatible with Plumber or the other modules. 
// The conflict is actually just for the kitchen. 
module RudeElectrician:
  var working: bool
  var Kw, Lw, Bw, Rw: bool  // room where working 
  stateless // If we track these, then we would have to know about repairs/breakdowns 
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean

  input call_electr : {local: ~electr_active ==> working' := false } 
  output done_electr : { electr_active & ~working & ~K_electr & ~L_electr & ~B_electr & ~R_electr ==> ~electr_active' } 

  // Does the work 
  output electr_start_K : { electr_active & ~working & K_electr           ==> working' & Kw' & K_busy' }
  output electr_start_L : { electr_active & ~working & L_electr & ~L_busy ==> working' & Lw' & L_busy' }
  output electr_start_B : { electr_active & ~working & B_electr & ~B_busy ==> working' & Bw' & B_busy' }
  output electr_start_R : { electr_active & ~working & R_electr & ~R_busy ==> working' & Rw' & R_busy' }
  output electr_done_K  : { electr_active & Kw ==> ~K_electr' & ~Kw' & ~K_busy' & ~working' } 
  output electr_done_L  : { electr_active & Lw ==> ~L_electr' & ~Lw' & ~L_busy' & ~working' } 
  output electr_done_B  : { electr_active & Bw ==> ~B_electr' & ~Bw' & ~B_busy' & ~working' } 
  output electr_done_R  : { electr_active & Rw ==> ~R_electr' & ~Rw' & ~R_busy' & ~working' } 

  // Checks that nobody else is working on the same room
  input  plumb_start_K : { local: ~Kw ==>  } 
  // input  electr_start_K : { local: ~Kw ==>  } 
  input  floor_start_K : { local: ~Kw ==>  } 
  input  wall_start_K : { local: ~Kw ==>  } 
  input  clean_start_K : { local: ~Kw ==>  } 

  input  plumb_start_L : { local: ~Lw ==>  } 
  // input  electr_start_L : { local: ~Lw ==>  } 
  input  floor_start_L : { local: ~Lw ==>  } 
  input  wall_start_L : { local: ~Lw ==>  } 
  input  clean_start_L : { local: ~Lw ==>  } 

  input  plumb_start_B : { local: ~Bw ==>  } 
  // input  electr_start_B : { local: ~Bw ==>  } 
  input  floor_start_B : { local: ~Bw ==>  } 
  input  wall_start_B : { local: ~Bw ==>  } 
  input  clean_start_B : { local: ~Bw ==>  } 

  input  plumb_start_R : { local: ~Rw ==>  } 
  // input  electr_start_R : { local: ~Rw ==>  } 
  input  floor_start_R : { local: ~Rw ==>  } 
  input  wall_start_R : { local: ~Rw ==>  } 
  input  clean_start_R : { local: ~Rw ==>  } 

  input  plumb_done_K : { local: ~Kw ==>  } 
  // input  electr_done_K : { local: ~Kw ==>  } 
  input  floor_done_K : { local: ~Kw ==>  } 
  input  wall_done_K : { local: ~Kw ==>  } 
  input  clean_done_K : { local: ~Kw ==>  } 

  input  plumb_done_L : { local: ~Lw ==>  } 
  // input  electr_done_L : { local: ~Lw ==>  } 
  input  floor_done_L : { local: ~Lw ==>  } 
  input  wall_done_L : { local: ~Lw ==>  } 
  input  clean_done_L : { local: ~Lw ==>  } 

  input  plumb_done_B : { local: ~Bw ==>  } 
  // input  electr_done_B : { local: ~Bw ==>  } 
  input  floor_done_B : { local: ~Bw ==>  } 
  input  wall_done_B : { local: ~Bw ==>  } 
  input  clean_done_B : { local: ~Bw ==>  } 

  input  plumb_done_R : { local: ~Rw ==>  } 
  // input  electr_done_R : { local: ~Rw ==>  } 
  input  floor_done_R : { local: ~Rw ==>  } 
  input  wall_done_R : { local: ~Rw ==>  } 
  input  clean_done_R : { local: ~Rw ==>  } 
endmodule

module Floors:
  var working: bool
  var Kw, Lw, Bw, Rw: bool  // room where working 
  stateless // If we track these, then we would have to know about repairs/breakdowns 
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean

  input call_floor : {local: ~floor_active ==> working' := false } 
  output done_floor : { floor_active & ~working & ~K_floor & ~L_floor & ~B_floor & ~R_floor ==> ~floor_active' } 

  // Does the work 
  output floor_start_K : { floor_active & ~working & K_floor & ~K_busy ==> working' & Kw' & K_busy' }
  output floor_start_L : { floor_active & ~working & L_floor & ~L_busy ==> working' & Lw' & L_busy' }
  output floor_start_B : { floor_active & ~working & B_floor & ~B_busy ==> working' & Bw' & B_busy' }
  output floor_start_R : { floor_active & ~working & R_floor & ~R_busy ==> working' & Rw' & R_busy' }
  output floor_done_K  : { floor_active & Kw ==> ~K_floor' & ~Kw' & ~K_busy' & ~working' } 
  output floor_done_L  : { floor_active & Lw ==> ~L_floor' & ~Lw' & ~L_busy' & ~working' } 
  output floor_done_B  : { floor_active & Bw ==> ~B_floor' & ~Bw' & ~B_busy' & ~working' } 
  output floor_done_R  : { floor_active & Rw ==> ~R_floor' & ~Rw' & ~R_busy' & ~working' } 

  // Checks that nobody else is working on the same room
  input  plumb_start_K : { local: ~Kw ==>  } 
  input  electr_start_K : { local: ~Kw ==>  } 
  // input  floor_start_K : { local: ~Kw ==>  } 
  input  wall_start_K : { local: ~Kw ==>  } 
  input  clean_start_K : { local: ~Kw ==>  } 

  input  plumb_start_L : { local: ~Lw ==>  } 
  input  electr_start_L : { local: ~Lw ==>  } 
  // input  floor_start_L : { local: ~Lw ==>  } 
  input  wall_start_L : { local: ~Lw ==>  } 
  input  clean_start_L : { local: ~Lw ==>  } 

  input  plumb_start_B : { local: ~Bw ==>  } 
  input  electr_start_B : { local: ~Bw ==>  } 
  // input  floor_start_B : { local: ~Bw ==>  } 
  input  wall_start_B : { local: ~Bw ==>  } 
  input  clean_start_B : { local: ~Bw ==>  } 

  input  plumb_start_R : { local: ~Rw ==>  } 
  input  electr_start_R : { local: ~Rw ==>  } 
  // input  floor_start_R : { local: ~Rw ==>  } 
  input  wall_start_R : { local: ~Rw ==>  } 
  input  clean_start_R : { local: ~Rw ==>  } 

  input  plumb_done_K : { local: ~Kw ==>  } 
  input  electr_done_K : { local: ~Kw ==>  } 
  // input  floor_done_K : { local: ~Kw ==>  } 
  input  wall_done_K : { local: ~Kw ==>  } 
  input  clean_done_K : { local: ~Kw ==>  } 

  input  plumb_done_L : { local: ~Lw ==>  } 
  input  electr_done_L : { local: ~Lw ==>  } 
  // input  floor_done_L : { local: ~Lw ==>  } 
  input  wall_done_L : { local: ~Lw ==>  } 
  input  clean_done_L : { local: ~Lw ==>  } 

  input  plumb_done_B : { local: ~Bw ==>  } 
  input  electr_done_B : { local: ~Bw ==>  } 
  // input  floor_done_B : { local: ~Bw ==>  } 
  input  wall_done_B : { local: ~Bw ==>  } 
  input  clean_done_B : { local: ~Bw ==>  } 

  input  plumb_done_R : { local: ~Rw ==>  } 
  input  electr_done_R : { local: ~Rw ==>  } 
  // input  floor_done_R : { local: ~Rw ==>  } 
  input  wall_done_R : { local: ~Rw ==>  } 
  input  clean_done_R : { local: ~Rw ==>  } 
endmodule

module Walls:
  var working: bool
  var Kw, Lw, Bw, Rw: bool  // room where working 
  stateless // If we track these, then we would have to know about repairs/breakdowns 
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean

  input call_wall : {local: ~wall_active ==> working' := false } 
  output done_wall : { wall_active & ~working & ~K_wall & ~L_wall & ~B_wall & ~R_wall ==> ~wall_active' } 

  // Does the work 
  output wall_start_K : { wall_active & ~working & K_wall & ~K_busy ==> working' & Kw' & K_busy' }
  output wall_start_L : { wall_active & ~working & L_wall & ~L_busy ==> working' & Lw' & L_busy' }
  output wall_start_B : { wall_active & ~working & B_wall & ~B_busy ==> working' & Bw' & B_busy' }
  output wall_start_R : { wall_active & ~working & R_wall & ~R_busy ==> working' & Rw' & R_busy' }
  output wall_done_K  : { wall_active & Kw ==> ~K_wall' & ~Kw' & ~K_busy' & ~working' } 
  output wall_done_L  : { wall_active & Lw ==> ~L_wall' & ~Lw' & ~L_busy' & ~working' } 
  output wall_done_B  : { wall_active & Bw ==> ~B_wall' & ~Bw' & ~B_busy' & ~working' } 
  output wall_done_R  : { wall_active & Rw ==> ~R_wall' & ~Rw' & ~R_busy' & ~working' } 

  // Checks that nobody else is working on the same room
  input  plumb_start_K : { local: ~Kw ==>  } 
  input  electr_start_K : { local: ~Kw ==>  } 
  input  floor_start_K : { local: ~Kw ==>  } 
  // input  wall_start_K : { local: ~Kw ==>  } 
  input  clean_start_K : { local: ~Kw ==>  } 

  input  plumb_start_L : { local: ~Lw ==>  } 
  input  electr_start_L : { local: ~Lw ==>  } 
  input  floor_start_L : { local: ~Lw ==>  } 
  // input  wall_start_L : { local: ~Lw ==>  } 
  input  clean_start_L : { local: ~Lw ==>  } 

  input  plumb_start_B : { local: ~Bw ==>  } 
  input  electr_start_B : { local: ~Bw ==>  } 
  input  floor_start_B : { local: ~Bw ==>  } 
  // input  wall_start_B : { local: ~Bw ==>  } 
  input  clean_start_B : { local: ~Bw ==>  } 

  input  plumb_start_R : { local: ~Rw ==>  } 
  input  electr_start_R : { local: ~Rw ==>  } 
  input  floor_start_R : { local: ~Rw ==>  } 
  // input  wall_start_R : { local: ~Rw ==>  } 
  input  clean_start_R : { local: ~Rw ==>  } 

  input  plumb_done_K : { local: ~Kw ==>  } 
  input  electr_done_K : { local: ~Kw ==>  } 
  input  floor_done_K : { local: ~Kw ==>  } 
  // input  wall_done_K : { local: ~Kw ==>  } 
  input  clean_done_K : { local: ~Kw ==>  } 

  input  plumb_done_L : { local: ~Lw ==>  } 
  input  electr_done_L : { local: ~Lw ==>  } 
  input  floor_done_L : { local: ~Lw ==>  } 
  // input  wall_done_L : { local: ~Lw ==>  } 
  input  clean_done_L : { local: ~Lw ==>  } 

  input  plumb_done_B : { local: ~Bw ==>  } 
  input  electr_done_B : { local: ~Bw ==>  } 
  input  floor_done_B : { local: ~Bw ==>  } 
  // input  wall_done_B : { local: ~Bw ==>  } 
  input  clean_done_B : { local: ~Bw ==>  } 

  input  plumb_done_R : { local: ~Rw ==>  } 
  input  electr_done_R : { local: ~Rw ==>  } 
  input  floor_done_R : { local: ~Rw ==>  } 
  // input  wall_done_R : { local: ~Rw ==>  } 
  input  clean_done_R : { local: ~Rw ==>  } 
endmodule

module Clean:
  var working: bool
  var Kw, Lw, Bw, Rw: bool  // room where working 
  stateless // If we track these, then we would have to know about repairs/breakdowns 
         K_plumb, K_electr, K_floor, K_wall, K_clean,
         L_plumb, L_electr, L_floor, L_wall, L_clean,
         B_plumb, B_electr, B_floor, B_wall, B_clean,
         R_plumb, R_electr, R_floor, R_wall, R_clean

  input call_clean : {local: ~clean_active ==> working' := false } 
  output done_clean : { clean_active & ~working & ~K_clean & ~L_clean & ~B_clean & ~R_clean ==> ~clean_active' } 

  // Does the work 
  output clean_start_K : { clean_active & ~working & K_clean & ~K_busy ==> working' & Kw' & K_busy' }
  output clean_start_L : { clean_active & ~working & L_clean & ~L_busy ==> working' & Lw' & L_busy' }
  output clean_start_B : { clean_active & ~working & B_clean & ~B_busy ==> working' & Bw' & B_busy' }
  output clean_start_R : { clean_active & ~working & R_clean & ~R_busy ==> working' & Rw' & R_busy' }
  output clean_done_K  : { clean_active & Kw ==> ~K_clean' & ~Kw' & ~K_busy' & ~working' } 
  output clean_done_L  : { clean_active & Lw ==> ~L_clean' & ~Lw' & ~L_busy' & ~working' } 
  output clean_done_B  : { clean_active & Bw ==> ~B_clean' & ~Bw' & ~B_busy' & ~working' } 
  output clean_done_R  : { clean_active & Rw ==> ~R_clean' & ~Rw' & ~R_busy' & ~working' } 

  // Checks that nobody else is working on the same room
  input  plumb_start_K : { local: ~Kw ==>  } 
  input  electr_start_K : { local: ~Kw ==>  } 
  input  floor_start_K : { local: ~Kw ==>  } 
  input  wall_start_K : { local: ~Kw ==>  } 
  // input  clean_start_K : { local: ~Kw ==>  } 

  input  plumb_start_L : { local: ~Lw ==>  } 
  input  electr_start_L : { local: ~Lw ==>  } 
  input  floor_start_L : { local: ~Lw ==>  } 
  input  wall_start_L : { local: ~Lw ==>  } 
  // input  clean_start_L : { local: ~Lw ==>  } 

  input  plumb_start_B : { local: ~Bw ==>  } 
  input  electr_start_B : { local: ~Bw ==>  } 
  input  floor_start_B : { local: ~Bw ==>  } 
  input  wall_start_B : { local: ~Bw ==>  } 
  // input  clean_start_B : { local: ~Bw ==>  } 

  input  plumb_start_R : { local: ~Rw ==>  } 
  input  electr_start_R : { local: ~Rw ==>  } 
  input  floor_start_R : { local: ~Rw ==>  } 
  input  wall_start_R : { local: ~Rw ==>  } 
  // input  clean_start_R : { local: ~Rw ==>  } 

  input  plumb_done_K : { local: ~Kw ==>  } 
  input  electr_done_K : { local: ~Kw ==>  } 
  input  floor_done_K : { local: ~Kw ==>  } 
  input  wall_done_K : { local: ~Kw ==>  } 
  // input  clean_done_K : { local: ~Kw ==>  } 

  input  plumb_done_L : { local: ~Lw ==>  } 
  input  electr_done_L : { local: ~Lw ==>  } 
  input  floor_done_L : { local: ~Lw ==>  } 
  input  wall_done_L : { local: ~Lw ==>  } 
  // input  clean_done_L : { local: ~Lw ==>  } 

  input  plumb_done_B : { local: ~Bw ==>  } 
  input  electr_done_B : { local: ~Bw ==>  } 
  input  floor_done_B : { local: ~Bw ==>  } 
  input  wall_done_B : { local: ~Bw ==>  } 
  // input  clean_done_B : { local: ~Bw ==>  } 

  input  plumb_done_R : { local: ~Rw ==>  } 
  input  electr_done_R : { local: ~Rw ==>  } 
  input  floor_done_R : { local: ~Rw ==>  } 
  input  wall_done_R : { local: ~Rw ==>  } 
  // input  clean_done_R : { local: ~Rw ==>  } 
endmodule


