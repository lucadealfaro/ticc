(* $Id: test-mlglu-2,v 1.1 2005/06/23 21:13:03 luca Exp $ *)

(* Test operations for arrays of mdds *)

open Mlglu;;

(* Create the bdds *)
let a = mdd_init [1;2;4;7] [] [];;
let b = mdd_eq_c a 0 1;;
let c = mdd_init [1;2] [] [];;
let d = mdd_eq_c c 0 1;;

(* Some tests that should work *)
Printf.printf "Some test with arrays of mdd's...\n";;
let x = mdd_lequal_array b [b;b] 1 1;;
Printf.printf "lequal_array b [b;b] = %b\n" x;;
let x = mdd_and_array b [b;b] 1 1;;
Printf.printf "and_array b [b;b]... passed\n";;
let x = mdd_multiway_and a [b;b];;
Printf.printf "multiway_and a [b;b]... passed\n";;
let x = mdd_multiway_or a [b;b];;
Printf.printf "multiway_or a [b;b]... passed\n";;
let x = mdd_multiway_xor a [b;b];;
Printf.printf "multiway_xor a [b;b]... passed\n";;
let x = mdd_size_multiple [b;b];;
Printf.printf "size_multiple [b;b] = %d\n" x;;
let x = mdd_array_duplicate [b;b];;
Printf.printf "array_duplicate [b;b]... passed\n";;
let x = mdd_array_equal [b;b] [b;b];;
Printf.printf "array_equal [b;b] [b;b] = %b\n" x;;
let x = mdd_array_equal [b;b] [b;d];;
Printf.printf "array_equal [b;b] [b;d] = %b\n" x;;

(* And some tests that should raise an exception (one at a time) *)
Printf.printf "Now we should have an exception for different managers
or null arrays...\n";;

Printf.printf "lequal_array b [b;d] raises DifferentMgrs\n";;
try mdd_lequal_array b [b;d] 1 1 with
  DifferentMgrs -> false;;

Printf.printf "and_array b [b;d] raises DifferentMgrs\n";;
try mdd_and_array b [b;d] 1 1 with
  DifferentMgrs -> b;;

Printf.printf "multiway_and a [b;d] raises DifferentMgrs\n";;
try mdd_multiway_and a [b;d] with
  DifferentMgrs -> b;;

Printf.printf "multiway_or a [b;d] raises DifferentMgrs\n";;
try mdd_multiway_or a [b;d] with
  DifferentMgrs -> b;;

Printf.printf "multiway_xor a [b;d] raises DifferentMgrs\n";;
try mdd_multiway_xor a [b;d] with
  DifferentMgrs -> b;;

Printf.printf "size_multiple [b;d] raises DifferentMgrs\n";;
try mdd_size_multiple [b;d] with
  DifferentMgrs -> 0;;

Printf.printf "array_duplicate [] raises NullArray\n";;
try mdd_array_duplicate [] with
  NullArray -> [];;

Printf.printf "array_equal [] [] raises NullArray\n";;
try mdd_array_equal [] [] with
  NullArray -> false;;

Printf.printf "array_equal [b] [] raises NullArray\n";;
try mdd_array_equal [b] [] with
  NullArray -> false;;

